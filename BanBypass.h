#include "Framework.h"

const uint64_t game_hash_compare_checks[] = { //Offset + 3
    0x112D76,
    0x30BA76,
    0x41E851,
    0x9BD729,
    0x12908B1,
    0x14067E1,
    0x1BA660E,
    0x4DD8F03,
    0x4DDD938,
    0x4DDF6FE,
    0x4DE7A7E,
    0x4DFF31A,
    0x4DFF90D,
    0x4DFFEB7,
    0x4E1AAC1,
    0x4E417AB,
    0x4E5C954,
    0x4E630C8,
    0x4E7A5B1,
    0x4EB9B61,
    0x4EBB8BD,
    0x4EF1825,
    0x4F19C37,
    0x4F27D6F,
    0x4F33028,
    0x4F364C8,
    0x4F3E5E2,
    0x4F3FE6A,
    0x4F5E40A,
    0x511AE4B,
    0x5154362,
    0x5157407,
    0x5167372,
    0x5169BE2,
    0x51878CE,
    0x51A0414,
    0x51A3EED,
    0x51A94CD,
    0x51C2170,
    0x51CDA3A,
    0x51CEA68,
    0x51D9E5F,
    0x52074AA,
    0x523D8E1,
    0x523FFCE,
    0x53CC5CC,
    0x54642F3,
    0x5467D33,
    0x54A724E,
    0x54A820C,
    0x54C4153,
    0x550852E,
    0x550C475,
    0x55B36A7,
    0x55BF1E7
};

const uint64_t game_hash_compare_checks_alt[] = {
	0x1B7A4D6,
	0x4DDA1EC,
	0x4DEB870,
	0x4E2AED7,
	0x4E58243,
	0x4F3659B,
	0x4F39DC1,
	0x51718EF,
	0x51AA29E,
	0x51D0FDF,
	0x53CB8D0,
	0x53CC3D0,
	0x55BA1F2
};


const uint64_t game_runtime_hash_checks[] =  { 
    0x323D43,
    0x3EF753,
    0x9BB6C5,
    0x1156018,
    0x151F80E,
    0x17AB32E,
    0x1A83510,
    0x1A84154,
    0x1A84205,
    0x1A84552,
    0x1A84603,
    0x1A84803,
    0x1A84B21,
    0x1A85F49,
    0x1A86BDF,
    0x1A86C90,
    0x1A86D41,
    0x1B7C9D2,
    0x1B7CF4B,
    0x1B7CFFC,
    0x1B898F4,
    0x1B89AF3,
    0x1B89BA4,
    0x1B89C55,
    0x1B9E986,
    0x1BA10AD,
    0x1BA1354,
    0x1BA1405,
    0x1BA185F,
    0x1BA2C48,
    0x1BA2CF9,
    0x1BA2DAB,
    0x1BA2E5C,
    0x1BA2F0D,
    0x1BA310C,
    0x1BA3264,
    0x1BF0945,
    0x4DB675E,
    0x4DD9D5C,
    0x4DDAED6,
    0x4DDCD8B,
    0x4DDEB10,
    0x4DE251D,
    0x4DEB138,
    0x4DECBC3,
    0x4DED174,
    0x4DED77D,
    0x4DF4D0B,
    0x4DF7523,
    0x4E10DE8,
    0x4E11385,
    0x4E188DB,
    0x4E19CB8,
    0x4E1EE86,
    0x4E222AA,
    0x4E3F833,
    0x4E40920,
    0x4E49289,
    0x4E4A106,
    0x4E574CF,
    0x4E58C36,
    0x4E5AD83,
    0x4E5D709,
    0x4E612E6,
    0x4E64AAB,
    0x4E65216,
    0x4E6CC39,
    0x4E6E5B0,
    0x4E6F9A6,
    0x4E700B0,
    0x4E73D5B,
    0x4E75206,
    0x4E77A42,
    0x4E7CA4A,
    0x4E7F0D6,
    0x4EBBA03,
    0x4EBBE34,
    0x4EBFF6E,
    0x4EC46BF,
    0x4EC53F1,
    0x4EC77D6,
    0x4F095F0,
    0x4F09771,
    0x4F0FAF2,
    0x4F100B7,
    0x4F13021,
    0x4F19813,
    0x4F19D8D,
    0x4F272C4,
    0x4F29381,
    0x4F2BD31,
    0x4F2C514,
    0x4F2D667,
    0x4F32208,
    0x4F37065,
    0x4F38FA3,
    0x4F3A5D6,
    0x4F3AB2C,
    0x4F5D610,
    0x4F8E689,
    0x4F90143,
    0x4F9094A,
    0x4F9CD02,
    0x50EC6CF,
    0x50EC963,
    0x50EE598,
    0x50FD6A0,
    0x51140AA,
    0x51158E3,
    0x5115CBF,
    0x511756C,
    0x511A668,
    0x511CB20,
    0x511D457,
    0x511EF2A,
    0x5121CC3,
    0x51262C8,
    0x5128CA5,
    0x512A509,
    0x512AADA,
    0x51587D7,
    0x5158B64,
    0x5167148,
    0x516AF1F,
    0x51817A4,
    0x518735C,
    0x51886C3,
    0x518B3DD,
    0x518DC55,
    0x51A2DC3,
    0x51A2F46,
    0x51A4031,
    0x51A5EBB,
    0x51A822D,
    0x51AA172,
    0x51AA9C5,
    0x51AC046,
    0x51AE1FE,
    0x51B089D,
    0x51B3813,
    0x51B7B36,
    0x51C0DB0,
    0x51C12FD,
    0x51C3151,
    0x51C479C,
    0x51C5711,
    0x51C5825,
    0x51C58C2,
    0x51C5F06,
    0x51C642F,
    0x51C761F,
    0x51C9CF4,
    0x51CB489,
    0x51CE338,
    0x51CF37C,
    0x51D05C7,
    0x51D367F,
    0x51D598E,
    0x51D7D93,
    0x51D8B76,
    0x51D9FF6,
    0x51F54A4,
    0x5207644,
    0x523D39A,
    0x523EAEF,
    0x524374E,
    0x526E4B4,
    0x5271D24,
    0x5275FDE,
    0x53C5331,
    0x53C6426,
    0x53CA117,
    0x53CACDF,
    0x545BE3C,
    0x545C5C9,
    0x545E9A8,
    0x5463569,
    0x5464EAB,
    0x5466E0D,
    0x5468DA7,
    0x5469191,
    0x54694C0,
    0x546AC50,
    0x546ADFD,
    0x546B9D3,
    0x546C4B0,
    0x54760A0,
    0x54783F6,
    0x54A4E88,
    0x54A9E4B,
    0x54AA3CC,
    0x54C210E,
    0x54C2301,
    0x54C599B,
    0x54C6134,
    0x55090B2,
    0x550B261,
    0x550C0A0,
    0x550E57C,
    0x559BA59,
    0x55AEA2A,
    0x55AF67A,
    0x55B0606,
    0x55B42EA,
    0x55BB5B7
};

void BanBypass();
DWORD WINAPI ACBypassThread(HMODULE hModule);